

import 'package:flutter/material.dart';
import 'package:get/get.dart';

import '../controller/recording_controller.dart';



// class RecordingScreen extends StatelessWidget {
//   final int taskId;
//   final String taskName;
//   final RecordingController _controller = Get.put(RecordingController());
//
//   RecordingScreen({required this.taskId, required this.taskName});
//
//   @override
//   Widget build(BuildContext context) {
//     final ThemeData themeData = Theme.of(context);
//     final isLightTheme = themeData.brightness == Brightness.light;
//
//     return Scaffold(
//       appBar: PreferredSize(
//         preferredSize: Size.fromHeight(kToolbarHeight),
//         child: AppBar(
//           title: Text(taskName, style: TextStyle(fontSize: 20, color: Colors.white)),
//           centerTitle: true,
//           iconTheme: IconThemeData(color: isLightTheme ? Colors.black : Colors.white),
//         ),
//       ),
//       body: Center(
//         child: Column(
//           mainAxisSize: MainAxisSize.min,
//           children: [
//             Stack(
//               alignment: Alignment.center,
//               children: [
//                 // Background image for timer
//                 Image.asset(
//                   'assets/images/timerbody.png',
//                   fit: BoxFit.cover,
//                 ),
//                 // Timer transparent image on top
//                 Image.asset(
//                   'assets/images/timertranspaent.png',
//                   fit: BoxFit.contain,
//                 ),
//                 // Display the timer inside the transparent image
//                 Obx(() {
//                   return Text(
//                     _controller.time.value, // Display the updated time value
//                     style: TextStyle(
//                       fontSize: 24,
//                       color: Colors.white70,
//                       fontWeight: FontWeight.bold,
//                     ),
//                   );
//                 }),
//               ],
//             ),
//             const SizedBox(height: 20),
//             // Toggle button for play/stop
//             GestureDetector(
//               onTap: () {
//                 if (_controller.isRecording.value) {
//                   _controller.stopRecording(); // Stop recording if currently recording
//                 } else {
//                   _controller.startRecording(); // Start recording if currently stopped
//                 }
//               },
//               child: Stack(
//                 alignment: Alignment.center,
//                 children: [
//                   Image.asset(
//                     'assets/images/pauseplay.png',
//                     fit: BoxFit.contain,
//                     width: 100,
//                     height: 100,
//                   ),
//                   Obx(() {
//                     return Icon(
//                       _controller.isRecording.value ? Icons.stop : Icons.play_arrow,
//                       size: 50,
//                       color: Colors.white,
//                     );
//                   }),
//                 ],
//               ),
//             ),
//           ],
//         ),
//       ),
//     );
//   }
// }




import 'package:flutter/material.dart';
import 'package:get/get.dart';

import '../controller/recording_controller.dart';



// class RecordingScreen extends StatelessWidget {
//   final int taskId;
//   final String taskName;
//   final RecordingController _controller = Get.put(RecordingController());
//
//   RecordingScreen({required this.taskId, required this.taskName});
//
//   @override
//   Widget build(BuildContext context) {
//     final ThemeData themeData = Theme.of(context);
//     final isLightTheme = themeData.brightness == Brightness.light;
//
//     return Scaffold(
//       appBar: PreferredSize(
//         preferredSize: Size.fromHeight(kToolbarHeight),
//         child: AppBar(
//           title: Text(taskName, style: TextStyle(fontSize: 20, color: Colors.white)),
//           centerTitle: true,
//           iconTheme: IconThemeData(color: isLightTheme ? Colors.black : Colors.white),
//         ),
//       ),
//       body: Center(
//         child: Column(
//           mainAxisSize: MainAxisSize.min,
//           children: [
//             Stack(
//               alignment: Alignment.center,
//               children: [
//                 // Background image for timer
//                 Image.asset(
//                   'assets/images/timerbody.png',
//                   fit: BoxFit.cover,
//                 ),
//                 // Timer transparent image on top
//                 Image.asset(
//                   'assets/images/timertranspaent.png',
//                   fit: BoxFit.contain,
//                 ),
//                 // Display the timer inside the transparent image
//                 Obx(() {
//                   return Text(
//                     _controller.time.value, // Display the updated time value
//                     style: TextStyle(
//                       fontSize: 24,
//                       color: Colors.white70,
//                       fontWeight: FontWeight.bold,
//                     ),
//                   );
//                 }),
//               ],
//             ),
//             const SizedBox(height: 20),
//             // Toggle button for play/stop
//             GestureDetector(
//               onTap: () {
//                 if (_controller.isRecording.value) {
//                   _controller.stopRecording(); // Stop recording if currently recording
//                 } else {
//                   _controller.startRecording(); // Start recording if currently stopped
//                 }
//               },
//               child: Stack(
//                 alignment: Alignment.center,
//                 children: [
//                   Image.asset(
//                     'assets/images/pauseplay.png',
//                     fit: BoxFit.contain,
//                     width: 100,
//                     height: 100,
//                   ),
//                   Obx(() {
//                     return Icon(
//                       _controller.isRecording.value ? Icons.stop : Icons.play_arrow,
//                       size: 50,
//                       color: Colors.white,
//                     );
//                   }),
//                 ],
//               ),
//             ),
//           ],
//         ),
//       ),
//     );
//   }
// }





class RecordingScreen extends StatelessWidget {
  final int taskId;
  final String taskName;
  final RecordingController _controller;

  RecordingScreen({required this.taskId, required this.taskName})
      : _controller = Get.put(RecordingController(taskId));
  @override
  Widget build(BuildContext context) {
    final ThemeData themeData = Theme.of(context);
    final isLightTheme = themeData.brightness == Brightness.light;

    return Scaffold(
      appBar: PreferredSize(
        preferredSize: Size.fromHeight(kToolbarHeight),
        child: AppBar(
          title: Text(taskName, style: TextStyle(fontSize: 20, color: Colors.white)),
          centerTitle: true,
          iconTheme: IconThemeData(color: isLightTheme ? Colors.black : Colors.white),
        ),
      ),
      body: Center(
        child: Column(
          mainAxisSize: MainAxisSize.min,
          children: [
            Stack(
              alignment: Alignment.center,
              children: [
                // Background image for timer
                Image.asset(
                  'assets/images/timerbody.png',
                  fit: BoxFit.cover,
                ),
                // Timer transparent image on top
                Image.asset(
                  'assets/images/timertranspaent.png',
                  fit: BoxFit.contain,
                ),
                // Display the timer inside the transparent image
                Obx(() {
                  return Text(
                    _controller.time.value, // Display the updated time value
                    style: TextStyle(
                      fontSize: 24,
                      color: Colors.white70,
                      fontWeight: FontWeight.bold,
                    ),
                  );
                }),
              ],
            ),
            const SizedBox(height: 20),
            // Toggle button for play/stop
            GestureDetector(
              onTap: () {
                if (_controller.isRecording.value) {
                  _controller.stopRecording(); // Stop recording if currently recording
                } else {
                  _controller.startRecording(); // Start recording if currently stopped
                }
              },
              child: Stack(
                alignment: Alignment.center,
                children: [
                  Image.asset(
                    'assets/images/pauseplay.png',
                    fit: BoxFit.contain,
                    width: 100,
                    height: 100,
                  ),
                  Obx(() {
                    return Icon(
                      _controller.isRecording.value ? Icons.stop : Icons.play_arrow,
                      size: 50,
                      color: Colors.white,
                    );
                  }),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}
